
void exgcd(ll a,ll b,ll &d,ll &x,ll &y){//求逆元
    if(!b){
        d=a;//根据方程ax-py=1，此处a应该等于1否则说明没有逆元
        x=1;
        y=0;
    }else{
        exgcd(b,a%b,d,y,x);
        y-=x*(a/b);
    }
}
ll getinv(ll  a,ll p){//返回逆元,扩展欧几里得法,要求a和p互质
    ll  d,x,y;
    exgcd(a, p, d, x, y);
    return d==1?(x+p)%p:-1;
}

ll divMod(ll a,ll b,ll mod){//当且仅当a/b能整除,求a/b%mod,但是注意，这里a和b都不能取过模，也就是他们太大的话这个方法一点也不好用
    ll M=b*mod;
    return (a%M)/b;
}

ll fac[MAX],inv[MAX],facinv[MAX];
void getFac(ll m,cll p){//别忘了初始化阶乘
    fac[1]=inv[1]=facinv[1]=1;
    for(ll i=2;i<m;i++){
        fac[i]=fac[i-1]*i%p;
        inv[i]=(p-p/i)*inv[p%i]%p;
        facinv[i]=inv[i]*facinv[i-1]%p;
    }
}